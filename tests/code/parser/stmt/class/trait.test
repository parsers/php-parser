Traits
-----
<?php

trait A {
    public function a() {}
}

class B {
    use C;
    use D {
        a as protected b;
        c as d;
        e as private;
    }
    use E, F, G {
        E::a insteadof F, G;
        E::b as protected c;
        E::d as e;
        E::f as private;
    }
}
-----
array(
    0: PHPParser\Node\Statement\TraitStatement(
        name: A
        Statements: array(
            0: PHPParser\Node\Statement\ClassMethodStatement(
                type: 1
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: a
            )
        )
    )
    1: PHPParser\Node\Statement\ClassStatement(
        type: 0
        extends: null
        implements: array(
        )
        Statements: array(
            0: PHPParser\Node\Statement\TraitUseStatement(
                traits: array(
                    0: PHPParser\Node\NameNode(
                        parts: array(
                            0: C
                        )
                    )
                )
                adaptations: array(
                )
            )
            1: PHPParser\Node\Statement\TraitUseStatement(
                traits: array(
                    0: PHPParser\Node\NameNode(
                        parts: array(
                            0: D
                        )
                    )
                )
                adaptations: array(
                    0: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: null
                        method: a
                        newModifier: 2
                        newName: b
                    )
                    1: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: null
                        method: c
                        newModifier: null
                        newName: d
                    )
                    2: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: null
                        method: e
                        newModifier: 4
                        newName: null
                    )
                )
            )
            2: PHPParser\Node\Statement\TraitUseStatement(
                traits: array(
                    0: PHPParser\Node\NameNode(
                        parts: array(
                            0: E
                        )
                    )
                    1: PHPParser\Node\NameNode(
                        parts: array(
                            0: F
                        )
                    )
                    2: PHPParser\Node\NameNode(
                        parts: array(
                            0: G
                        )
                    )
                )
                adaptations: array(
                    0: PHPParser\Node\Statement\TraitUseAdaptation_Precedence(
                        trait: PHPParser\Node\NameNode(
                            parts: array(
                                0: E
                            )
                        )
                        method: a
                        insteadof: array(
                            0: PHPParser\Node\NameNode(
                                parts: array(
                                    0: F
                                )
                            )
                            1: PHPParser\Node\NameNode(
                                parts: array(
                                    0: G
                                )
                            )
                        )
                    )
                    1: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: PHPParser\Node\NameNode(
                            parts: array(
                                0: E
                            )
                        )
                        method: b
                        newModifier: 2
                        newName: c
                    )
                    2: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: PHPParser\Node\NameNode(
                            parts: array(
                                0: E
                            )
                        )
                        method: d
                        newModifier: null
                        newName: e
                    )
                    3: PHPParser\Node\Statement\TraitUseAdaptation_Alias(
                        trait: PHPParser\Node\NameNode(
                            parts: array(
                                0: E
                            )
                        )
                        method: f
                        newModifier: 4
                        newName: null
                    )
                )
            )
        )
        name: B
    )
)