Class declaration
-----
<?php

class A extends B implements C, D {
    const A = 'B', C = 'D';

    public $a = 'b', $c = 'd';
    protected $e;
    private $f;

    public function a() {}
    public static function b() {}
    public final function c() {}
    protected function d() {}
    private function e() {}
}
-----
array(
    0: PHPParser\Node\Statement\ClassStatement(
        type: 0
        extends: PHPParser\Node\NameNode(
            parts: array(
                0: B
            )
        )
        implements: array(
            0: PHPParser\Node\NameNode(
                parts: array(
                    0: C
                )
            )
            1: PHPParser\Node\NameNode(
                parts: array(
                    0: D
                )
            )
        )
        Statements: array(
            0: PHPParser\Node\Statement\ClassConstStatement(
                consts: array(
                    0: PHPParser\Node\ConstNode(
                        name: A
                        value: PHPParser\Node\Scalar\StringScalar(
                            value: B
                        )
                    )
                    1: PHPParser\Node\ConstNode(
                        name: C
                        value: PHPParser\Node\Scalar\StringScalar(
                            value: D
                        )
                    )
                )
            )
            1: PHPParser\Node\Statement\PropertyStatement(
                type: 1
                props: array(
                    0: PHPParser\Node\Statement\PropertyPropertyStatement(
                        name: a
                        default: PHPParser\Node\Scalar\StringScalar(
                            value: b
                        )
                    )
                    1: PHPParser\Node\Statement\PropertyPropertyStatement(
                        name: c
                        default: PHPParser\Node\Scalar\StringScalar(
                            value: d
                        )
                    )
                )
            )
            2: PHPParser\Node\Statement\PropertyStatement(
                type: 2
                props: array(
                    0: PHPParser\Node\Statement\PropertyPropertyStatement(
                        name: e
                        default: null
                    )
                )
            )
            3: PHPParser\Node\Statement\PropertyStatement(
                type: 4
                props: array(
                    0: PHPParser\Node\Statement\PropertyPropertyStatement(
                        name: f
                        default: null
                    )
                )
            )
            4: PHPParser\Node\Statement\ClassMethodStatement(
                type: 1
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: a
            )
            5: PHPParser\Node\Statement\ClassMethodStatement(
                type: 9
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: b
            )
            6: PHPParser\Node\Statement\ClassMethodStatement(
                type: 33
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: c
            )
            7: PHPParser\Node\Statement\ClassMethodStatement(
                type: 2
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: d
            )
            8: PHPParser\Node\Statement\ClassMethodStatement(
                type: 4
                byRef: false
                params: array(
                )
                Statements: array(
                )
                name: e
            )
        )
        name: A
    )
)