Object access
-----
<?php

// property fetch variations
$a->b;
$a->b['c'];
$a->b{'c'};

// method call variations
$a->b();
$a->{'b'}();
$a->$b();
$a->$b['c']();

// array dereferencing
$a->b()['c'];
$a->b(){'c'}; // invalid PHP: drop Support?
-----
array(
    0: PHPParser\Node\Expression\PropertyFetchExpression(
        var: PHPParser\Node\Expression\VariableExpression(
            name: a
        )
        name: b
    )
    1: PHPParser\Node\Expression\ArrayDimFetchExpression(
        var: PHPParser\Node\Expression\PropertyFetchExpression(
            var: PHPParser\Node\Expression\VariableExpression(
                name: a
            )
            name: b
        )
        dim: PHPParser\Node\Scalar\StringScalar(
            value: c
        )
    )
    2: PHPParser\Node\Expression\ArrayDimFetchExpression(
        var: PHPParser\Node\Expression\PropertyFetchExpression(
            var: PHPParser\Node\Expression\VariableExpression(
                name: a
            )
            name: b
        )
        dim: PHPParser\Node\Scalar\StringScalar(
            value: c
        )
    )
    3: PHPParser\Node\Expression\MethodCallExpression(
        var: PHPParser\Node\Expression\VariableExpression(
            name: a
        )
        name: b
        args: array(
        )
    )
    4: PHPParser\Node\Expression\MethodCallExpression(
        var: PHPParser\Node\Expression\VariableExpression(
            name: a
        )
        name: PHPParser\Node\Scalar\StringScalar(
            value: b
        )
        args: array(
        )
    )
    5: PHPParser\Node\Expression\MethodCallExpression(
        var: PHPParser\Node\Expression\VariableExpression(
            name: a
        )
        name: PHPParser\Node\Expression\VariableExpression(
            name: b
        )
        args: array(
        )
    )
    6: PHPParser\Node\Expression\MethodCallExpression(
        var: PHPParser\Node\Expression\VariableExpression(
            name: a
        )
        name: PHPParser\Node\Expression\ArrayDimFetchExpression(
            var: PHPParser\Node\Expression\VariableExpression(
                name: b
            )
            dim: PHPParser\Node\Scalar\StringScalar(
                value: c
            )
        )
        args: array(
        )
    )
    7: PHPParser\Node\Expression\ArrayDimFetchExpression(
        var: PHPParser\Node\Expression\MethodCallExpression(
            var: PHPParser\Node\Expression\VariableExpression(
                name: a
            )
            name: b
            args: array(
            )
        )
        dim: PHPParser\Node\Scalar\StringScalar(
            value: c
        )
    )
    8: PHPParser\Node\Expression\ArrayDimFetchExpression(
        var: PHPParser\Node\Expression\MethodCallExpression(
            var: PHPParser\Node\Expression\VariableExpression(
                name: a
            )
            name: b
            args: array(
            )
        )
        dim: PHPParser\Node\Scalar\StringScalar(
            value: c
        )
    )
)